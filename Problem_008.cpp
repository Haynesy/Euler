/**
Find the greatest product of five consecutive digits in the 1000-digit number.

73167176531330624919225119674426574742355349194934
96983520312774506326239578318016984801869478851843
85861560789112949495459501737958331952853208805511
12540698747158523863050715693290963295227443043557
66896648950445244523161731856403098711121722383113
62229893423380308135336276614282806444486645238749
30358907296290491560440772390713810515859307960866
70172427121883998797908792274921901699720888093776
65727333001053367881220235421809751254540594752243
52584907711670556013604839586446706324415722155397
53697817977846174064955149290862569321978468622482
83972241375657056057490261407972968652414535100474
82166370484403199890008895243450658541227588666881
16427171479924442928230863465674813919123162824586
17866458359124566529476545682848912883142607690042
24219022671055626321111109370544217506941658960408
07198403850962455444362981230987879927244284909188
84580156166097919133875499200524063689912560717606
05886116467109405077541002256983155200055935729725
71636269561882670428252483600823257530420752963450
**/

#include <iostream>
#include <fstream>

using namespace std;

int product(int *a_sums);
void rotateArray(int *a_rotate);
void printArray(int *a_print);
int numFromArray(int *a_convert);

void prob_8(void)
{
	int largestNumber = 0;
	
	ifstream OpenFile("problem8.txt");
	char ch;
	int a_product[] = {0, 0, 0, 0, 0};

	do
	{
		if(product(&a_product[0]) > largestNumber) 
			largestNumber = product(&a_product[0]);

		rotateArray(&a_product[0]);

		OpenFile.get(ch);
		a_product[4] = (int)ch - (int)'0';

	}while(!OpenFile.eof());
	OpenFile.close();

	cout << endl << "Largest Num: " << largestNumber << endl;
}

int numFromArray(int *a_convert)
{
	return (a_convert[0]*10000) + (a_convert[1]*1000) + (a_convert[2]*100) + 
		(a_convert[3]*10) + a_convert[4];
}

int product(int *a_sums)
{
	int sum = 1;
	for(int i = 0;i<5;i++)sum *= a_sums[i];
	
	return sum;
}

void rotateArray(int *a_rotate)
{
	for(int i = 1;i<5;i++)a_rotate[i-1] = a_rotate[i];
	a_rotate[4] = 0;
}

void printArray(int *a_print)
{
	cout << a_print[0] << ", " << a_print[1] << ", " << a_print[2] 
	<< ", " << a_print[3] << ", " << a_print[4] << endl;
}
